{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNcmg3eMiphyjgefBFWFYFp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Let's Grow More(LGMVIP) - \"DATA SCIENCE INTERN\"**\n","\n","**LGMVIP OCTOBER 2023**\n","\n","**AUTHOR - MANJULA B**\n","\n","**BEGINNER LEVEL TASK**\n","\n","**TASK 1 - IRIS FLOWER CLASSIFICATION**"],"metadata":{"id":"L8AskrTtjHSO"}},{"cell_type":"code","execution_count":7,"metadata":{"id":"xP1hhD60i2FJ","executionInfo":{"status":"ok","timestamp":1695461168475,"user_tz":-330,"elapsed":1,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}}},"outputs":[],"source":["#IMPORTING THE LIBRRAIES\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n"]},{"cell_type":"code","source":["data=pd.read_csv('/content/iris.csv')\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"qQEoGcOuk4lI","executionInfo":{"status":"ok","timestamp":1695461168912,"user_tz":-330,"elapsed":4,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"769d8e3f-b131-439d-9b29-24a42c0fcab0"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal length in cm  sepal width in cm  petal length in cm  \\\n","0                   5.1                3.5                 1.4   \n","1                   4.9                3.0                 1.4   \n","2                   4.7                3.2                 1.3   \n","3                   4.6                3.1                 1.5   \n","4                   5.0                3.6                 1.4   \n","..                  ...                ...                 ...   \n","145                 6.7                3.0                 5.2   \n","146                 6.3                2.5                 5.0   \n","147                 6.5                3.0                 5.2   \n","148                 6.2                3.4                 5.4   \n","149                 5.9                3.0                 5.1   \n","\n","     petal width in cm           class  \n","0                  0.2     Iris-setosa  \n","1                  0.2     Iris-setosa  \n","2                  0.2     Iris-setosa  \n","3                  0.2     Iris-setosa  \n","4                  0.2     Iris-setosa  \n","..                 ...             ...  \n","145                2.3  Iris-virginica  \n","146                1.9  Iris-virginica  \n","147                2.0  Iris-virginica  \n","148                2.3  Iris-virginica  \n","149                1.8  Iris-virginica  \n","\n","[150 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-493cfe94-ac84-4d00-9f37-a901d291bf4c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length in cm</th>\n","      <th>sepal width in cm</th>\n","      <th>petal length in cm</th>\n","      <th>petal width in cm</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows Ã— 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-493cfe94-ac84-4d00-9f37-a901d291bf4c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-493cfe94-ac84-4d00-9f37-a901d291bf4c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-493cfe94-ac84-4d00-9f37-a901d291bf4c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eeb1a1b9-812c-4101-83f9-47f9f7c8f892\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eeb1a1b9-812c-4101-83f9-47f9f7c8f892')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eeb1a1b9-812c-4101-83f9-47f9f7c8f892 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"5AgrhhgmmlLW","executionInfo":{"status":"ok","timestamp":1695461169731,"user_tz":-330,"elapsed":822,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"17612cd5-27aa-42ad-c97a-d8a7ad3147d1"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   sepal length in cm  sepal width in cm  petal length in cm  \\\n","0                 5.1                3.5                 1.4   \n","1                 4.9                3.0                 1.4   \n","2                 4.7                3.2                 1.3   \n","3                 4.6                3.1                 1.5   \n","4                 5.0                3.6                 1.4   \n","\n","   petal width in cm        class  \n","0                0.2  Iris-setosa  \n","1                0.2  Iris-setosa  \n","2                0.2  Iris-setosa  \n","3                0.2  Iris-setosa  \n","4                0.2  Iris-setosa  "],"text/html":["\n","  <div id=\"df-744e329a-07e3-4f1d-91ff-082a747bc580\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length in cm</th>\n","      <th>sepal width in cm</th>\n","      <th>petal length in cm</th>\n","      <th>petal width in cm</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-744e329a-07e3-4f1d-91ff-082a747bc580')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-744e329a-07e3-4f1d-91ff-082a747bc580 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-744e329a-07e3-4f1d-91ff-082a747bc580');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9cddbedc-1f1b-4672-915c-d665c71488aa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9cddbedc-1f1b-4672-915c-d665c71488aa')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9cddbedc-1f1b-4672-915c-d665c71488aa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#data description\n","data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"ZiusbEhonPTn","executionInfo":{"status":"ok","timestamp":1695461169731,"user_tz":-330,"elapsed":7,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"53875b6e-8a20-4c23-ae31-7e12a581c531"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       sepal length in cm  sepal width in cm  petal length in cm  \\\n","count          150.000000         150.000000          150.000000   \n","mean             5.843333           3.054000            3.758667   \n","std              0.828066           0.433594            1.764420   \n","min              4.300000           2.000000            1.000000   \n","25%              5.100000           2.800000            1.600000   \n","50%              5.800000           3.000000            4.350000   \n","75%              6.400000           3.300000            5.100000   \n","max              7.900000           4.400000            6.900000   \n","\n","       petal width in cm  \n","count         150.000000  \n","mean            1.198667  \n","std             0.763161  \n","min             0.100000  \n","25%             0.300000  \n","50%             1.300000  \n","75%             1.800000  \n","max             2.500000  "],"text/html":["\n","  <div id=\"df-23bfe51c-2bc6-48ef-b380-82d9ca3866df\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length in cm</th>\n","      <th>sepal width in cm</th>\n","      <th>petal length in cm</th>\n","      <th>petal width in cm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.843333</td>\n","      <td>3.054000</td>\n","      <td>3.758667</td>\n","      <td>1.198667</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.828066</td>\n","      <td>0.433594</td>\n","      <td>1.764420</td>\n","      <td>0.763161</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>4.300000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>0.100000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5.100000</td>\n","      <td>2.800000</td>\n","      <td>1.600000</td>\n","      <td>0.300000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5.800000</td>\n","      <td>3.000000</td>\n","      <td>4.350000</td>\n","      <td>1.300000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.400000</td>\n","      <td>3.300000</td>\n","      <td>5.100000</td>\n","      <td>1.800000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>7.900000</td>\n","      <td>4.400000</td>\n","      <td>6.900000</td>\n","      <td>2.500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23bfe51c-2bc6-48ef-b380-82d9ca3866df')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-23bfe51c-2bc6-48ef-b380-82d9ca3866df button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-23bfe51c-2bc6-48ef-b380-82d9ca3866df');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3b5af08a-4ca1-422d-8430-f50844687cc8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3b5af08a-4ca1-422d-8430-f50844687cc8')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3b5af08a-4ca1-422d-8430-f50844687cc8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# checking null values\n","data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IeAu6E4ZnVcP","executionInfo":{"status":"ok","timestamp":1695461169732,"user_tz":-330,"elapsed":7,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"8bc600a4-46fa-491d-8177-4a2ccf4fe45f"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sepal length in cm    0\n","sepal width in cm     0\n","petal length in cm    0\n","petal width in cm     0\n","class                 0\n","dtype: int64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["#bar plot\n","plt.bar(data['class'],data['petal width in cm'])\n","plt.title('class VS petal width in cm')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"fuORDl4zoJ3S","executionInfo":{"status":"ok","timestamp":1695461169732,"user_tz":-330,"elapsed":4,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"d337042f-fa5a-4e6b-9757-a90c64527d7f"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#bar plot\n","plt.bar(data['class'],data['petal length in cm'])\n","plt.title('class VS petal length in cm')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"6VwHzUEVop_A","executionInfo":{"status":"ok","timestamp":1695461170705,"user_tz":-330,"elapsed":977,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"3df496d5-a80f-47ee-ff65-69599adcf05e"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#bar plot\n","plt.bar(data['class'],data['sepal width in cm'])\n","plt.title('class VS sepal width in cm')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"wnLtppe7ox4G","executionInfo":{"status":"ok","timestamp":1695461170705,"user_tz":-330,"elapsed":4,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"b9a3be24-a4b9-489c-9fc0-ceec47910450"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#bar plot\n","plt.bar(data['class'],data['sepal length in cm'])\n","plt.title('class VS sepal length in cm')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"ZsaeK8VOo5nX","executionInfo":{"status":"ok","timestamp":1695461171752,"user_tz":-330,"elapsed":1050,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"8ab61142-fab3-449b-b1bf-a6f27da832b4"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAhYAAAGzCAYAAABzfl4TAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAxg0lEQVR4nO3deVhV1f7H8c8R4kAIOIGIIqBFhEPmUJk3ZyOnq5ZjdJ1KG9QGs4HbNTUztHstuw1q2VXvdUjNIbOc0wbNxAEf5yEhySxyAofChPX7o8fz68ggBxci9n49z37yrL323t99WsDn7L3OOQ5jjBEAAIAFZUq6AAAAcO0gWAAAAGsIFgAAwBqCBQAAsIZgAQAArCFYAAAAawgWAADAGoIFAACwhmABAACsIVig1Fm7dq0cDofWrl1b0qUgHw6HQyNHjiywT2pqqhwOh6ZNm3ZFarockZGR6tChQ5G3L8zzAVwrCBbAZUpPT5e3t7ceeOCBfPucOnVKfn5+uvfee11t27dvV9euXRURESFfX19VrVpVbdq00ZtvvnklysZFdu3apZEjRyo1NbWkSwFKNe+SLgAo7UJCQtSmTRt99NFHOnv2rK6//vpcfRYsWKBff/3VFT7Wr1+vFi1aqHr16howYIBCQ0OVlpamDRs26I033tCQIUOu9Gn86e3atUujRo1S8+bNFRkZaXXfv/zyi7y9+XWLPwdGOmBBfHy8li1bpsWLF6tnz5651s+aNUtBQUFq3769JGnMmDEKCgpSUlKSypUr59Y3PT39SpSMK8jX17ekSwCuGG6F4Kpz+PBhPfjggwoLC5PT6VRUVJQeffRRnTt3Lt9tvvzyS3Xr1k3Vq1eX0+lUeHi4nnrqKf3yyy9u/X788Uf169dP1apVk9PpVJUqVdSpUye3y9+bNm1SXFycKlWqJD8/P0VFRal///4F1tylSxf5+/tr1qxZudalp6dr9erV6tq1q5xOpyTp22+/Va1atXKFCun3KyCXsn//ft13330KDQ2Vr6+vqlWrpp49eyojI8Ot34wZM9SgQQP5+fmpQoUK6tmzp9LS0tz6NG/eXLVr19bmzZt15513us550qRJbv3OnTunF198UQ0aNFBQUJD8/f111113ac2aNZes1xN79uxR165dVaFCBfn6+qphw4ZavHixW59p06bJ4XBo3bp1Gjp0qIKDg+Xv768uXbro559/duubk5OjkSNHKiwsTNdff71atGihXbt2KTIyUn379nXtr1u3bpKkFi1ayOFw5DmP56uvvtJtt90mX19f1ahRQ//9738LdU4Xz7EYOXKkHA6HDhw4oL59+6pcuXIKCgpSv379dPbs2ULt85tvvlG7du1Uvnx5+fv7q27dunrjjTdc6/v27auyZcvq0KFD6tChg8qWLauqVavq7bfflvT7rbiWLVvK399fEREReY5doCi4YoGryg8//KDbbrtNJ0+e1MCBAxUTE6PDhw/rww8/1NmzZ+Xj45PndvPmzdPZs2f16KOPqmLFitq4caPefPNNff/995o3b56r33333aedO3dqyJAhioyMVHp6ulauXKlDhw65Ht99990KDg7W888/r3Llyik1NVULFiwosG5/f3916tRJH374oY4fP64KFSq41s2ZM0fZ2dmKj493tUVEROjrr7/Wjh07VLt2bY+eo3PnzikuLk5ZWVkaMmSIQkNDdfjwYS1ZskQnT55UUFCQpN+vigwfPlzdu3fXQw89pJ9//llvvvmmmjZtqq1bt7qFmhMnTqhdu3bq3r27evXqpblz5+rRRx+Vj4+PK1RlZmZqypQp6tWrlwYMGKBTp07p/fffV1xcnDZu3Kh69ep5dB552blzp5o0aaKqVavq+eefl7+/v+bOnavOnTtr/vz56tKli1v/IUOGqHz58hoxYoRSU1M1YcIEDR48WHPmzHH1SUhI0KuvvqqOHTsqLi5O27ZtU1xcnH799VdXn6ZNm+rxxx/Xv//9b/3973/XzTffLEmu/0rSgQMH1LVrVz344IPq06eP/vOf/6hv375q0KCBatWqVaTz7d69u6KiopSYmKgtW7ZoypQpCgkJ0bhx4wrcbuXKlerQoYOqVKmiJ554QqGhodq9e7eWLFmiJ554wtUvOztbbdu2VdOmTfXqq69q5syZGjx4sPz9/fXCCy8oPj5e9957ryZNmqTevXurcePGioqKKtK5AC4GuIr07t3blClTxiQlJeVal5OTY4wxZs2aNUaSWbNmjWvd2bNnc/VPTEw0DofDfPfdd8YYY06cOGEkmX/+85/5Hn/hwoVGUp7Hv5RPPvnESDKTJ092a7/jjjtM1apVTXZ2tqttxYoVxsvLy3h5eZnGjRubZ5991ixfvtycO3fuksfZunWrkWTmzZuXb5/U1FTj5eVlxowZ49a+fft24+3t7dberFkzI8mMHz/e1ZaVlWXq1atnQkJCXDWdP3/eZGVlue3vxIkTpnLlyqZ///5u7ZLMiBEjCjyPlJQUI8lMnTrV1daqVStTp04d8+uvv7racnJyzJ133mluvPFGV9vUqVONJNO6dWvXuDDGmKeeesp4eXmZkydPGmOM+fHHH423t7fp3Lmz27FHjhxpJJk+ffq42ubNm5drXF0QERFhJJkvvvjC1Zaenm6cTqd5+umnCzxPY3I/HyNGjDCScj1vXbp0MRUrVixwX+fPnzdRUVEmIiLCnDhxwm3dH5+LPn36GEnmlVdecbWdOHHC+Pn5GYfDYT744ANX+549ewr1/wwoDG6F4KqRk5OjRYsWqWPHjmrYsGGu9Q6HI99t/fz8XP8+c+aMjh49qjvvvFPGGG3dutXVx8fHR2vXrtWJEyfy3M+FV/FLlizRb7/95lH9F650/PGSckpKijZs2KBevXqpTJn//3Fr06aNvv76a/31r3/Vtm3b9OqrryouLk5Vq1bNddn/YheuSCxfvjzfy+YLFixQTk6OunfvrqNHj7qW0NBQ3XjjjbluX3h7e+vhhx92Pfbx8dHDDz+s9PR0bd68WZLk5eXlumKUk5Oj48eP6/z582rYsKG2bNniwTOVt+PHj+uzzz5T9+7dderUKVfNx44dU1xcnPbv36/Dhw+7bTNw4EC3cXHXXXcpOztb3333nSRp9erVOn/+vB577DG37YoyOTY2NlZ33XWX63FwcLBuuukmHTx40ON9XfDII4+4Pb7rrrt07NgxZWZm5rvN1q1blZKSoieffDLXrbS8fkYeeugh17/LlSunm266Sf7+/urevbur/aabblK5cuUu61yACwgWuGr8/PPPyszM9PjWgCQdOnRIffv2VYUKFVS2bFkFBwerWbNmkuSad+B0OjVu3DgtXbpUlStXdl0e/vHHH137adasme677z6NGjVKlSpVUqdOnTR16lRlZWVdsgZvb2/16NFDX375pesP4IWQ8cfbIBc0atRICxYs0IkTJ7Rx40YlJCTo1KlT6tq1q3bt2pXvcaKiojR06FBNmTJFlSpVUlxcnN5++223+RX79++XMUY33nijgoOD3Zbdu3fnmiAaFhYmf39/t7bo6GhJcpt/Mn36dNWtW1e+vr6qWLGigoOD9cknn+Sa21EUBw4ckDFGw4cPz1XziBEjJOWe2Fq9enW3x+XLl5ckV3C8EDBuuOEGt34VKlRw9S2si4914Xj5hdSi7PPi+vPy7bffSlKhfk58fX0VHBzs1hYUFKRq1arlCiFBQUGXdS7ABcyxQKmXnZ2tNm3a6Pjx43ruuecUExMjf39/HT58WH379lVOTo6r75NPPqmOHTtq0aJFWr58uYYPH67ExER99tlnuvXWW+VwOPThhx9qw4YN+vjjj7V8+XL1799f48eP14YNG1S2bNkCa3nggQf01ltvafbs2Ro2bJhmz56t2NjYAucf+Pj4qFGjRmrUqJGio6PVr18/zZs3z/XHNC/jx49X37599dFHH2nFihV6/PHHlZiYqA0bNqhatWrKycmRw+HQ0qVL5eXllWv7S51HXmbMmKG+ffuqc+fOeuaZZxQSEiIvLy8lJia6/thdjgv/n4YNG6a4uLg8+1wcEPI6N0kyxlx2PRcrjmMVd/357f9KPm/48yFY4KoRHByswMBA7dixw6Pttm/frn379mn69Onq3bu3q33lypV59q9Zs6aefvppPf3009q/f7/q1aun8ePHa8aMGa4+d9xxh+644w6NGTNGs2bNUnx8vD744AO3y8p5uf3221WzZk3NmjVLbdq00c6dOzVmzJhCn8uFW0BHjhy5ZN86deqoTp06+sc//qH169erSZMmmjRpkl5++WXVrFlTxhhFRUW5rjwU5IcfftCZM2fcrlrs27dPklyf6fDhhx+qRo0aWrBggdur3YICkCdq1KghSbruuuvUunVrK/uMiIiQ9PvVkD9OSjx27FiuV+cF3Wq7mtSsWVOStGPHDmvPE2ATt0Jw1ShTpow6d+6sjz/+WJs2bcq1Pr9XUxdeff1xvTHG7a13knT27Fm3dwJIv/+SDggIcN3qOHHiRK7jXLjaUJjbIdLvtz22bt2qESNGyOFw6P7778/VZ82aNXmez6effirp93ve+cnMzNT58+fd2urUqaMyZcq4arz33nvl5eWlUaNG5TqOMUbHjh1zazt//rwmT57senzu3DlNnjxZwcHBatCggaS8n+dvvvlGX3/9db61eiIkJETNmzfX5MmT8wxWF7+NtDBatWolb29vTZw40a39rbfeytX3Qqg6efKkx8e5kurXr6+oqChNmDAhV61cccDVgCsWuKq88sorWrFihZo1a6aBAwfq5ptv1pEjRzRv3jx99dVXeX7uQ0xMjGrWrKlhw4bp8OHDCgwM1Pz583O9It23b59atWql7t27KzY2Vt7e3lq4cKF++ukn14daTZ8+Xe+88466dOmimjVr6tSpU3rvvfcUGBiodu3aFeocHnjgAb300kv66KOP1KRJkzw/xXHIkCE6e/asunTpopiYGJ07d07r16/XnDlzFBkZqX79+uW7/88++0yDBw9Wt27dFB0drfPnz+t///ufvLy8dN9990n6PTC9/PLLSkhIUGpqqjp37qyAgAClpKRo4cKFGjhwoIYNG+baZ1hYmMaNG6fU1FRFR0drzpw5Sk5O1rvvvqvrrrtOktShQwctWLBAXbp0Ufv27ZWSkqJJkyYpNjZWp0+fLtRzcylvv/22/vKXv6hOnToaMGCAatSooZ9++klff/21vv/+e23bts2j/VWuXFlPPPGExo8fr7/+9a+65557tG3bNi1dulSVKlVyu0pRr149eXl5ady4ccrIyJDT6VTLli0L9bkiV1KZMmU0ceJEdezYUfXq1VO/fv1UpUoV7dmzRzt37tTy5ctLukT82V3x96EAl/Ddd9+Z3r17m+DgYON0Ok2NGjXMoEGDXG91zOvtprt27TKtW7c2ZcuWNZUqVTIDBgww27Ztc3s749GjR82gQYNMTEyM8ff3N0FBQeb22283c+fOde1ny5YtplevXqZ69erG6XSakJAQ06FDB7Np0yaPzqFRo0ZGknnnnXfyXL906VLTv39/ExMTY8qWLWt8fHzMDTfcYIYMGWJ++umnAvd98OBB079/f1OzZk3j6+trKlSoYFq0aGFWrVqVq+/8+fPNX/7yF+Pv72/8/f1NTEyMGTRokNm7d6+rT7NmzUytWrXMpk2bTOPGjY2vr6+JiIgwb731ltu+cnJyzCuvvGIiIiKM0+k0t956q1myZInp06ePiYiIcOurIr7d1Bhjvv32W9O7d28TGhpqrrvuOlO1alXToUMH8+GHH7r6XHi76cVvC85rbJw/f94MHz7chIaGGj8/P9OyZUuze/duU7FiRfPII4+4bf/ee++ZGjVqGC8vL7f9REREmPbt2+c6h2bNmplmzZoVeJ55PR8X3m76888/u/W7cF4pKSmX3OdXX31l2rRpYwICAoy/v7+pW7euefPNN13r+/TpY/z9/fOsuVatWrna8ztHwFMOY7h2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gKufR1csNm/erPT0dNWvX9/Vlp2drS+++EJvvfWWsrKy5OXl5baN0+mU0+m0Uy0AALiqeRQsWrVqpe3bt7u19evXTzExMXruuedyhQoAAPDn4lGwCAgIUO3atd3a/P39VbFixVztAADgz4dP3gQAANZ4/K6Qi61du9ZCGQAA4FrAFQsAAGANwQIAAFhDsAAAANYQLAAAgDUECwAAYA3BAgAAWEOwAAAA1hAsAACANQQLAABgDcECAABYQ7AAAADWECwAAIA1BAsAAGANwQIAAFhDsAAAANYQLAAAgDUECwAAYA3BAgAAWEOwAAAA1hAsAACANQQLAABgDcECAABYQ7AAAADWECwAAIA1BAsAAGANwQIAAFhDsAAAANYQLAAAgDUECwAAYA3BAgAAWEOwAAAA1hAsAACANQQLAABgDcECAABY41GwmDhxourWravAwEAFBgaqcePGWrp0aXHVBgAAShmPgkW1atU0duxYbd68WZs2bVLLli3VqVMn7dy5s7jqAwAApYi3J507duzo9njMmDGaOHGiNmzYoFq1alktDAAAlD4eBYs/ys7O1rx583TmzBk1btw4335ZWVnKyspyPc7MzCzqIQEAwFXO48mb27dvV9myZeV0OvXII49o4cKFio2Nzbd/YmKigoKCXEt4ePhlFQwAAK5eHgeLm266ScnJyfrmm2/06KOPqk+fPtq1a1e+/RMSEpSRkeFa0tLSLqtgAABw9fL4VoiPj49uuOEGSVKDBg2UlJSkN954Q5MnT86zv9PplNPpvLwqAQBAqXDZn2ORk5PjNocCAAD8eXl0xSIhIUFt27ZV9erVderUKc2aNUtr167V8uXLi6s+AABQingULNLT09W7d28dOXJEQUFBqlu3rpYvX642bdoUV30AAKAU8ShYvP/++8VVBwAAuAbwXSEAAMAaggUAALCGYAEAAKwhWAAAAGsIFgAAwBqCBQAAsIZgAQAArCFYAAAAawgWAADAGoIFAACwhmABAACsIVgAAABrCBYAAMAaggUAALCGYAEAAKwhWAAAAGsIFgAAwBqCBQAAsIZgAQAArCFYAAAAawgWAADAGoIFAACwhmABAACsIVgAAABrCBYAAMAaggUAALCGYAEAAKwhWAAAAGsIFgAAwBqCBQAAsIZgAQAArCFYAAAAawgWAADAGo+CRWJioho1aqSAgACF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1Knq0qWL1q1bp06dOumBBx6Q9PsP3r59+9y2xZXn6biKj4/Xs88+q169eungwYPq2bOna139+vU1f/58RUZGytvbs18Vfn5+6tixozp27KhBgwYpJiZG27dvd3sFKf3+6vD777/Xvn378rxqcfPNN2vdunVubevWrVN0dLRrHsbF/QszrnFl2RyXhXHTTTfp/Pnz2rp1q+uKyoEDB3TixAkr53NB3bp1tXr1avXr1y/Xuj179ujYsWMaO3asayxemPx+reOKRQl47bXXNHv2bO3Zs0f79u3TvHnzFBoamu8HrxTUv3Xr1mrcuLE6d+6sFStWKDU1VevXr9cLL7zgGsSRkZFKSUlRcnKyjh49qqysLLVu3Vp16tRRfHy8tmzZoo0bN6p3795q1qyZGjZsqF9++UWDBw/W2rVr9d1332ndunVKSkrSzTffLEm68cYbtXLlSq1fv167d+/Www8/7DbzHleep+NKku69916dOnVKjz76qFq0aKGwsDDXukGDBun48ePq1auXkpKS9O2332r58uXq169fnrchLpg2bZref/997dixQwcPHtSMGTPk5+eniIiIXH2bNWumpk2b6r777tPKlSuVkpKipUuXatmyZZKkp59+WqtXr9bo0aO1b98+TZ8+XW+99ZaGDRuW57EvNa5x5dkel4URExOj1q1ba+DAgdq4caO2bt2qgQMHWr2yIUkjRozQ7NmzNWLECO3evVvbt2/XuHHjJEnVq1eXj4+P3nzzTR08eFCLFy/W6NGjrR37akawKAEBAQF69dVX1bBhQzVq1Eipqan69NNP833fdUH9HQ6HPv30UzVt2lT9+vVTdHS0evbsqe+++06VK1eWJN13332655571KJFCwUHB2v27NlyOBz66KOPVL58eTVt2lStW7dWjRo1NGfOHEmSl5eXjh07pt69eys6Olrdu3dX27ZtNWrUKEnSP/7xD9WvX19xcXFq3ry5QkND1blz5yvy/CFvno6rC9t07NhR27Zty3W5OSwsTOvWrVN2drbuvvtu1alTR08++aTKlStX4D7LlSun9957T02aNFHdunW1atUqffzxx6pYsWKe/efPn69GjRqpV69eio2N1bPPPusKLvXr19fcuXP1wQcfqHbt2nrxxRf10ksv5Tuz/lLjGlee7XFZWP/9739VuXJlNW3aVF26dNGAAQMUEBBg9e3FzZs317x587R48WLVq1dPLVu2dL0zLjg4WNOmTdO8efMUGxursWPH6l//+pe1Y1/NHMYYU9JFAABQnL7//nuFh4dr1apVBU64xOUjWAAArjmfffaZTp8+rTp16ujIkSN69tlndfjwYe3bt89tgibsY/ImAOCa89tvv+nvf/+7Dh48qICAAN15552aOXMmoeIK4IoFAACwhsmbAADAGoIFAACwhmABAACsIVgAAABrCBYAAMAaggUAALCGYAEAAKwhWAAAAGv+D91HdAM4JK+mAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["#heatmap\n","sns.heatmap(data.corr(),annot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":621},"id":"rG_rS_v3pA4X","executionInfo":{"status":"ok","timestamp":1695461171752,"user_tz":-330,"elapsed":16,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"54b46e82-9b0f-40a3-8482-2ed4990042c6"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-16-42221d057ef7>:2: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  sns.heatmap(data.corr(),annot=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8-pdkR5SpLHX","executionInfo":{"status":"ok","timestamp":1695461171752,"user_tz":-330,"elapsed":12,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"ae2ac7b4-5a2b-4fe5-be2b-3ede4f325fd2"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 150 entries, 0 to 149\n","Data columns (total 5 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   sepal length in cm  150 non-null    float64\n"," 1   sepal width in cm   150 non-null    float64\n"," 2   petal length in cm  150 non-null    float64\n"," 3   petal width in cm   150 non-null    float64\n"," 4   class               150 non-null    object \n","dtypes: float64(4), object(1)\n","memory usage: 6.0+ KB\n"]}]},{"cell_type":"code","source":["#preprocessing the data\n","from sklearn.preprocessing import LabelEncoder\n","le=LabelEncoder()\n","data['class']=le.fit_transform(data['class'])\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7iKpKMcJpXJu","executionInfo":{"status":"ok","timestamp":1695461171753,"user_tz":-330,"elapsed":12,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"473a3bd4-0723-427f-e238-5193612576b3"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   sepal length in cm  sepal width in cm  petal length in cm  \\\n","0                 5.1                3.5                 1.4   \n","1                 4.9                3.0                 1.4   \n","2                 4.7                3.2                 1.3   \n","3                 4.6                3.1                 1.5   \n","4                 5.0                3.6                 1.4   \n","\n","   petal width in cm  class  \n","0                0.2      0  \n","1                0.2      0  \n","2                0.2      0  \n","3                0.2      0  \n","4                0.2      0  "],"text/html":["\n","  <div id=\"df-26f63697-25c0-4922-85b2-e6823bdc2d81\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length in cm</th>\n","      <th>sepal width in cm</th>\n","      <th>petal length in cm</th>\n","      <th>petal width in cm</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26f63697-25c0-4922-85b2-e6823bdc2d81')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-26f63697-25c0-4922-85b2-e6823bdc2d81 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-26f63697-25c0-4922-85b2-e6823bdc2d81');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bb0e4aaa-6066-4ad9-a9cf-f23534f41854\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb0e4aaa-6066-4ad9-a9cf-f23534f41854')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bb0e4aaa-6066-4ad9-a9cf-f23534f41854 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["data['class'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FV90J-ckpzcI","executionInfo":{"status":"ok","timestamp":1695461171753,"user_tz":-330,"elapsed":12,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"21e9a5ac-94f0-4284-ca0c-21c903329a7d"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2])"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["#splitting x and y\n","x=data.iloc[:,:-1]\n","y=data.iloc[:,-1:]"],"metadata":{"id":"vqH9sTvXp-JY","executionInfo":{"status":"ok","timestamp":1695461171753,"user_tz":-330,"elapsed":10,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"7oIgGsQ-qaa3","executionInfo":{"status":"ok","timestamp":1695461171753,"user_tz":-330,"elapsed":10,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"d7a781c8-7500-4f80-9a0d-923d2bec2c80"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal length in cm  sepal width in cm  petal length in cm  \\\n","0                   5.1                3.5                 1.4   \n","1                   4.9                3.0                 1.4   \n","2                   4.7                3.2                 1.3   \n","3                   4.6                3.1                 1.5   \n","4                   5.0                3.6                 1.4   \n","..                  ...                ...                 ...   \n","145                 6.7                3.0                 5.2   \n","146                 6.3                2.5                 5.0   \n","147                 6.5                3.0                 5.2   \n","148                 6.2                3.4                 5.4   \n","149                 5.9                3.0                 5.1   \n","\n","     petal width in cm  \n","0                  0.2  \n","1                  0.2  \n","2                  0.2  \n","3                  0.2  \n","4                  0.2  \n","..                 ...  \n","145                2.3  \n","146                1.9  \n","147                2.0  \n","148                2.3  \n","149                1.8  \n","\n","[150 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-91f876d0-351d-40a2-8df1-21e00b9b6e7a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length in cm</th>\n","      <th>sepal width in cm</th>\n","      <th>petal length in cm</th>\n","      <th>petal width in cm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows Ã— 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-91f876d0-351d-40a2-8df1-21e00b9b6e7a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-91f876d0-351d-40a2-8df1-21e00b9b6e7a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-91f876d0-351d-40a2-8df1-21e00b9b6e7a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-18453cfa-45ce-45ad-bcb8-c84dcd26692c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18453cfa-45ce-45ad-bcb8-c84dcd26692c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-18453cfa-45ce-45ad-bcb8-c84dcd26692c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"i5uu8oMSqb2Q","executionInfo":{"status":"ok","timestamp":1695461171753,"user_tz":-330,"elapsed":9,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"85cffe0c-fbbc-4a4b-e617-c0a39a86d33e"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     class\n","0        0\n","1        0\n","2        0\n","3        0\n","4        0\n","..     ...\n","145      2\n","146      2\n","147      2\n","148      2\n","149      2\n","\n","[150 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-5ee3f725-6a75-44ab-ab15-28fbc15999a2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows Ã— 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ee3f725-6a75-44ab-ab15-28fbc15999a2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5ee3f725-6a75-44ab-ab15-28fbc15999a2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5ee3f725-6a75-44ab-ab15-28fbc15999a2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cb6395ea-91b2-41ea-9157-d16612ecdadf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb6395ea-91b2-41ea-9157-d16612ecdadf')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cb6395ea-91b2-41ea-9157-d16612ecdadf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["#train test split\n","from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=1)\n"],"metadata":{"id":"7b81IGBMqdCH","executionInfo":{"status":"ok","timestamp":1695461171754,"user_tz":-330,"elapsed":10,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["# logisticregrssion\n","from sklearn.linear_model import LogisticRegression\n","model=LogisticRegression()\n","model.fit(x_train,y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":109},"id":"narDeA7IV7Hz","executionInfo":{"status":"ok","timestamp":1695461171754,"user_tz":-330,"elapsed":10,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"50de6d04-92ea-40ee-da2d-b4b0381b6b1a"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/utils/validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# prediction\n","y_train_pred=model.predict(x_train)\n","y_train_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sQiLBiROXICS","executionInfo":{"status":"ok","timestamp":1695461449622,"user_tz":-330,"elapsed":2,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"875c12cf-793d-47c7-824f-6cd293326acd"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 1, 2, 2, 0, 1, 0, 1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 0, 1, 0, 0,\n","       2, 2, 2, 2, 2, 1, 2, 1, 0, 2, 2, 0, 0, 2, 0, 2, 2, 1, 1, 2, 2, 0,\n","       1, 1, 2, 1, 2, 1, 0, 0, 0, 2, 0, 2, 2, 2, 0, 0, 1, 0, 2, 1, 2, 2,\n","       1, 2, 2, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 2, 2, 2, 0, 0, 2, 0, 2, 0,\n","       2, 2, 0, 2, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2, 0,\n","       0, 2, 1, 2, 1, 2, 2, 1, 2, 0])"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["# prediction\n","y_test_pred=model.predict(x_test)\n","y_test_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GvwaU2pIYLPD","executionInfo":{"status":"ok","timestamp":1695461468965,"user_tz":-330,"elapsed":2,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"cfb5e383-aad6-45d6-d017-c5217df1729a"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, 0, 2, 1, 2, 0, 0, 2, 1, 0, 2, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n","       2, 0, 2, 1, 0, 0, 1, 2])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# accuracy_score\n","from sklearn.metrics import accuracy_score\n","test_accuracy=accuracy_score(y_test,y_test_pred)*100\n","train_accuracy=accuracy_score(y_train,y_train_pred)*100\n","print(\"Accuracy of the model is {:.2f}\".format(test_accuracy))\n","print(\"Accuracy of the model is {:.2f}\".format(train_accuracy))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_ExGSJ1hXN3y","executionInfo":{"status":"ok","timestamp":1695461581383,"user_tz":-330,"elapsed":654,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"b8f76f37-9377-479b-de1b-e9ed2a40197b"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the model is 96.67\n","Accuracy of the model is 98.33\n"]}]},{"cell_type":"code","source":["#confusion matrix,classification report\n","from sklearn.metrics import confusion_matrix, classification_report\n","print(confusion_matrix(y_test,y_test_pred))\n","print(classification_report(y_test, y_test_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QU9yXaLYY41L","executionInfo":{"status":"ok","timestamp":1695461754961,"user_tz":-330,"elapsed":383,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"fc4c2e78-13ba-449d-b2e7-2e55446071cc"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["[[11  0  0]\n"," [ 0 12  1]\n"," [ 0  0  6]]\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00        11\n","           1       1.00      0.92      0.96        13\n","           2       0.86      1.00      0.92         6\n","\n","    accuracy                           0.97        30\n","   macro avg       0.95      0.97      0.96        30\n","weighted avg       0.97      0.97      0.97        30\n","\n"]}]},{"cell_type":"code","source":["# clasifying the new values\n","model.predict([[4.1, 2.5, 1.7, 0.2]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FzrcxYq6ZZxs","executionInfo":{"status":"ok","timestamp":1695461803428,"user_tz":-330,"elapsed":368,"user":{"displayName":"21I230 MANJULA B","userId":"03450954935807079269"}},"outputId":"142a54b6-224e-48b4-b605-82c95ad29d6e"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0])"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":[],"metadata":{"id":"9O8BYJnXaBtK"},"execution_count":null,"outputs":[]}]}